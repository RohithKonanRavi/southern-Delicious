version: 0.2

env:
  variables:
    Project: "RohithKonanRavi_southern-Delicious"
    Organization: "rohithkonanravi"
    HOST: "https://sonarcloud.io"
    LOGIN: "4dc5c635c1bcb253d4855f421850974a2b00b91a"
phases:
  install:
    commands:
    - dnf update -y
    - dnf install -y python3-pip python3-dev build-essential
    # Install virtualenv to isolate the build environment
    - pip3 install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install django djangorestframework pylint
    - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
    - unzip sonar-scanner-cli-4.6.2.2472-linux.zip
    - export PATH=$PATH:$(pwd)/sonar-scanner-4.6.2.2472-linux/bin

  pre_build:
    commands:
    - pip install -r requirements.txt

  build:
    commands:
    - python manage.py test
    - pylint --exit-zero --output-format=text your_project_directory/ > pylint_report.txt
    - sonar-scanner \ -Dsonar.projectKey=$Project \ -Dsonar.organization=$Organization \ -Dsonar.sources=. \ -Dsonar.host.url=$HOST \ -Dsonar.login=$LOGIN \ -Dsonar.python.pylint.reportPaths=pylint_report.txt
    - sleep 5
    - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project >result.json
    - cat result.json
    - if [ $(jq -r '.projectStatus.status' result.json) = "ERROR" ] ; then exit 1 ;fi

# You may define artifacts as needed
artifacts:
  files:
  - '**/*'
